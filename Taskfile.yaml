version: '3'

vars:
  VERSION:
    sh: git describe --tags --always
  COMMIT_SHA:
    sh: git rev-parse HEAD
  BUILD_DATE:
    sh: date '+%F %T'
  PREMIUM_VERSION:
    sh: curl -sSL https://api.github.com/repos/Dreamacro/clash/releases/tags/premium | jq -r '.name'
  META_VERSION:
    sh: curl -sSL https://api.github.com/repos/MetaCubeX/Clash.Meta/releases/latest | jq -r '.name'

tasks:
  mkdir:
    desc: Create Build Dir
    cmds:
      - mkdir -p build
    status:
      - test -d build

  download-mmdb:
    desc: Download GeoIP2-CN MMDB
    cmds:
      - curl -sSL https://cdn.jsdelivr.net/gh/Hackl0us/GeoIP2-CN@release/Country.mmdb > static/Country.mmdb
    status:
      - test -f static/Country.mmdb

  build-premium-dashboard:
    desc: Build Clash Premium Dashboard
    cmds:
      - git clone https://github.com/haishanh/yacd.git build/yacd
      - defer: rm -rf build/yacd
      - git clone https://github.com/Dreamacro/clash-dashboard.git build/official
      - defer: rm -rf build/official
      - (cd build/yacd && pnpm install > /dev/null 2>&1 && pnpm build > /dev/null 2>&1)
      - (cd build/official && pnpm install > /dev/null 2>&1 && pnpm build > /dev/null 2>&1)
      - cp -r build/yacd/public static/yacd
      - cp -r build/official/dist static/official
    status:
      - test -d static/yacd
      - test -d static/official

  build-meta-dashboard:
    desc: Build Clash Meta Dashboard
    cmds:
      - git clone https://github.com/MetaCubeX/Yacd-meta.git build/yacd
      - defer: rm -rf build/yacd
      - git clone https://github.com/MetaCubeX/Razord-meta.git build/official
      - defer: rm -rf build/official
      - (cd build/yacd && pnpm install > /dev/null 2>&1 && pnpm build > /dev/null 2>&1)
      - (cd build/official && pnpm install > /dev/null 2>&1 && pnpm build > /dev/null 2>&1)
      - cp -r build/yacd/public static/yacd
      - cp -r build/official/dist static/official
    status:
      - test -d static/yacd
      - test -d static/official

  download-clash-premium:
    desc: Download Clash Premium
    vars:
      CLASH_URL:
        sh: curl -sSL https://api.github.com/repos/Dreamacro/clash/releases/tags/premium | jq -r '.assets[].browser_download_url | select (. | test("clash-{{.PLATFORM}}-\\d{4}.*gz"))'
    cmds:
      - curl -sSL https://release.dreamacro.workers.dev/latest/clash-{{.PLATFORM}}-latest.gz > build/clash-{{.PLATFORM}}.gz
      - gzip -d build/clash-{{.PLATFORM}}.gz
      - chmod +x build/clash-{{.PLATFORM}}
    status:
      - test -f build/clash-{{.PLATFORM}}

  download-clash-meta:
    desc: Download Clash Meta
    vars:
      CLASH_META_URL:
        sh: curl -sSL https://api.github.com/repos/MetaCubeX/Clash.Meta/releases/latest | jq -r '.assets[].browser_download_url | select (. | test("clash.meta-{{.PLATFORM}}-v\\d+.*gz"))'
    cmds:
      - curl -sSL {{.CLASH_META_URL}} > build/clash-meta-{{.PLATFORM}}.gz
      - gzip -d build/clash-meta-{{.PLATFORM}}.gz
      - chmod +x build/clash-meta-{{.PLATFORM}}
    status:
      - test -f build/clash-meta-{{.PLATFORM}}

  move-clash-premium:
    desc: Copy Clash Premium To Embed FS
    cmds:
      - task: download-clash-premium
        vars: { PLATFORM: "{{.PLATFORM}}" }
      - mv build/clash-{{.PLATFORM}} static/xclash

  move-clash-meta:
    desc: Copy Clash Meta To Embed FS
    cmds:
      - task: download-clash-meta
        vars: { PLATFORM: "{{.PLATFORM}}" }
      - mv build/clash-meta-{{.PLATFORM}} static/xclash

  build-tpclash-premium:
    desc: Build TPClash With Clash Premium
    label: build-premium-{{.PLATFORM}}
    cmds:
      - task: mkdir
      - task: download-mmdb
      - task: build-premium-dashboard
      - task: download-clash-premium
        vars: { PLATFORM: "{{.PLATFORM}}" }
      - task: move-clash-premium
        vars: { PLATFORM: "{{.PLATFORM}}" }
      - |
        GOOS={{.GOOS}} GOARCH={{.GOARCH}} GOARM={{.GOARM}} GOMIPS={{.GOMIPS}} \
        go build -trimpath -o build/tpclash-premium-{{.PLATFORM}} -ldflags \
        "-w -s -X 'main.build={{.BUILD_DATE}}' -X 'main.commit={{.COMMIT_SHA}}' -X 'main.version={{.VERSION}}' -X 'main.clash={{.PREMIUM_VERSION}}'"

  build-tpclash-meta:
    desc: Build TPClash With Clash Meta
    label: build-meta-{{.PLATFORM}}
    cmds:
      - task: mkdir
      - task: download-mmdb
      - task: build-meta-dashboard
      - task: download-clash-meta
        vars: { PLATFORM: "{{.PLATFORM}}" }
      - task: move-clash-meta
        vars: { PLATFORM: "{{.PLATFORM}}" }
      - |
        GOOS={{.GOOS}} GOARCH={{.GOARCH}} GOARM={{.GOARM}} GOMIPS={{.GOMIPS}} \
        go build -trimpath -o build/tpclash-meta-{{.PLATFORM}} -ldflags \
        "-w -s -X 'main.build={{.BUILD_DATE}}' -X 'main.commit={{.COMMIT_SHA}}' -X 'main.version={{.VERSION}}' -X 'main.clash=Meta {{.META_VERSION}}'"

  linux-386-premium:
    desc: Build TPClash With Clash Premium(linux/386)
    cmds:
      - task: build-tpclash-premium
        vars: {
          PLATFORM: linux-386,
          GOOS: linux,
          GOARCH: 386
        }
  linux-amd64-premium:
    desc: Build TPClash With Clash Premium(linux/amd64)
    cmds:
      - task: build-tpclash-premium
        vars: {
          PLATFORM: linux-amd64,
          GOOS: linux,
          GOARCH: amd64
        }
  linux-amd64-v3-premium:
    desc: Build TPClash With Clash Premium(linux/amd64-v3)
    cmds:
      - task: build-tpclash-premium
        vars: {
          PLATFORM: linux-amd64-v3,
          GOOS: linux,
          GOARCH: amd64,
          GOAMD64: v3
        }
  linux-arm64-premium:
    desc: Build TPClash With Clash Premium(linux/arm64)
    cmds:
      - task: build-tpclash-premium
        vars: {
          PLATFORM: linux-arm64,
          GOOS: linux,
          GOARCH: arm64
        }
  linux-armv5-premium:
    desc: Build TPClash With Clash Premium(linux/armv5)
    cmds:
      - task: build-tpclash-premium
        vars: {
          PLATFORM: linux-armv5,
          GOOS: linux,
          GOARCH: arm,
          GOARM: 5
        }
  linux-armv6-premium:
    desc: Build TPClash With Clash Premium(linux/armv6)
    cmds:
      - task: build-tpclash-premium
        vars: {
          PLATFORM: linux-armv6,
          GOOS: linux,
          GOARCH: arm,
          GOARM: 6
        }
  linux-armv7-premium:
    desc: Build TPClash With Clash Premium(linux/armv7)
    cmds:
      - task: build-tpclash-premium
        vars: {
          PLATFORM: linux-armv7,
          GOOS: linux,
          GOARCH: arm,
          GOARM: 7
        }
  linux-mips-hardfloat-premium:
    desc: Build TPClash With Clash Premium(linux/mips-hardfloat)
    cmds:
      - task: build-tpclash-premium
        vars: {
          PLATFORM: linux-mips-hardfloat,
          GOOS: linux,
          GOARCH: mips,
          GOMIPS: hardfloat
        }
  linux-mipsle-softfloat-premium:
    desc: Build TPClash With Clash Premium(linux/mipsle-softfloat)
    cmds:
      - task: build-tpclash-premium
        vars: {
          PLATFORM: linux-mipsle-softfloat,
          GOOS: linux,
          GOARCH: mipsle,
          GOMIPS: softfloat
        }
  linux-mipsle-hardfloat-premium:
    desc: Build TPClash With Clash Premium(linux/mipsle-hardfloat)
    cmds:
      - task: build-tpclash-premium
        vars: {
          PLATFORM: linux-mipsle-hardfloat,
          GOOS: linux,
          GOARCH: mipsle,
          GOMIPS: hardfloat
        }
  linux-mips64-premium:
    desc: Build TPClash With Clash Premium(linux/mips64)
    cmds:
      - task: build-tpclash-premium
        vars: {
          PLATFORM: linux-mips64,
          GOOS: linux,
          GOARCH: mips64
        }
  linux-mips64le-premium:
    desc: Build TPClash With Clash Premium(linux/mips64le)
    cmds:
      - task: build-tpclash-premium
        vars: {
          PLATFORM: linux-mips64le,
          GOOS: linux,
          GOARCH: mips64le
        }

  linux-amd64-meta:
    desc: Build TPClash With Clash Meta(linux/amd64)
    cmds:
      - task: build-tpclash-meta
        vars: {
          PLATFORM: linux-amd64-compatible,
          GOOS: linux,
          GOARCH: amd64,
          GOAMD64: v2
        }
  linux-amd64-v3-meta:
    desc: Build TPClash With Clash Meta(linux/amd64-v3)
    cmds:
      - task: build-tpclash-meta
        vars: {
          PLATFORM: linux-amd64,
          GOOS: linux,
          GOARCH: amd64,
          GOAMD64: v3
        }
  linux-arm64-meta:
    desc: Build TPClash With Clash Meta(linux/arm64)
    cmds:
      - task: build-tpclash-meta
        vars: {
          PLATFORM: linux-arm64,
          GOOS: linux,
          GOARCH: arm64
        }
  linux-armv5-meta:
    desc: Build TPClash With Clash Meta(linux/armv5)
    cmds:
      - task: build-tpclash-meta
        vars: {
          PLATFORM: linux-armv5,
          GOOS: linux,
          GOARCH: arm,
          GOARM: 5
        }
  linux-armv6-meta:
    desc: Build TPClash With Clash Meta(linux/armv6)
    cmds:
      - task: build-tpclash-meta
        vars: {
          PLATFORM: linux-armv6,
          GOOS: linux,
          GOARCH: arm,
          GOARM: 6
        }
  linux-armv7-meta:
    desc: Build TPClash With Clash Meta(linux/armv7)
    cmds:
      - task: build-tpclash-meta
        vars: {
          PLATFORM: linux-armv7,
          GOOS: linux,
          GOARCH: arm,
          GOARM: 7
        }
  linux-mips-hardfloat-meta:
    desc: Build TPClash With Clash Meta(linux/mips-hardfloat)
    cmds:
      - task: build-tpclash-meta
        vars: {
          PLATFORM: linux-mips-hardfloat,
          GOOS: linux,
          GOARCH: mips,
          GOMIPS: hardfloat
        }
  linux-mipsle-softfloat-meta:
    desc: Build TPClash With Clash Meta(linux/mipsle-softfloat)
    cmds:
      - task: build-tpclash-meta
        vars: {
          PLATFORM: linux-mipsle-softfloat,
          GOOS: linux,
          GOARCH: mipsle,
          GOMIPS: softfloat
        }
  linux-mipsle-hardfloat-meta:
    desc: Build TPClash With Clash Meta(linux/mipsle-hardfloat)
    cmds:
      - task: build-tpclash-meta
        vars: {
          PLATFORM: linux-mipsle-hardfloat,
          GOOS: linux,
          GOARCH: mipsle,
          GOMIPS: hardfloat
        }
  linux-mips64-meta:
    desc: Build TPClash With Clash Meta(linux/mips64)
    cmds:
      - task: build-tpclash-meta
        vars: {
          PLATFORM: linux-mips64,
          GOOS: linux,
          GOARCH: mips64
        }
  linux-mips64le-meta:
    desc: Build TPClash With Clash Meta(linux/mips64le)
    cmds:
      - task: build-tpclash-meta
        vars: {
          PLATFORM: linux-mips64le,
          GOOS: linux,
          GOARCH: mips64le
        }

  default:
    cmds:
      - rm -rf build static
      - task: linux-amd64-premium
      - rm -rf static/yacd static/official
      - rm -rf static
